{
  "configVersion": 1,
  "gltfExtensionName": "MOZ_hubs_components",
  "gltfExtensionVersion": 3,
  "types": {
    "MaterialItem": {
      "properties": {
        "value": {
          "type": "material"
        }
      }
    },
    "MaterialCollection": {
      "properties": {
        "value": {
          "type": "array",
          "arrayType": "MaterialItem"
        }
      }
    },
    "TaggedMaterial": {
      "properties": {
        "id": {
          "type": "string",
          "default": "$name"
        },
        "name": {
          "type": "string",
          "default": "$name"
        },
        "material": {
          "type": "material"
        }
      }
    },
    "SpawnerMediaOptions": {
      "properties": {
        "applyGravity": {
          "description": "Apply gravity to spawned object",
          "type": "bool",
          "default": false
        }
      }
    }
  },
  "components": {
    "background": {
      "category": "Scene",
      "scene": true,
      "node": false,
      "properties": {
        "color": { "type": "color", "default": "#aaaaaa" }
      }
    },
    "fog": {
      "category": "Scene",
      "scene": true,
      "node": false,
      "properties": {
        "type": {
          "type": "enum",
          "description": "Fog Type",
          "items": [ 
            [ "linear", "Linear fog", "Fog effect will increase linearly with distance" ],
            [ "exponential", "Exponential fog", "Fog effect will increase exponentially with distance" ]
          ]
        },
        "color": { "type": "color", "default": "#ffffff" },
        "near": { "type": "float", "default": 1.0, "description": "Fog Near Distance (linear only)" },
        "far": { "type": "float", "default": 100.0, "description": "Fog Far Distance (linear only)" },
        "density": { "type": "float", "default": 0.1, "description": "Fog Density (exponential only)" }
      }
    },
    "audio-settings": {
      "category": "Scene",
      "scene": true,
      "node": false,
      "properties": {
        "avatarDistanceModel": {
          "type": "enum",
          "description": "Avatar Distance Model",
          "items": [ 
            [ "inverse", "Inverse drop off (inverse)", "Volume will decrease inversely with distance" ],
            [ "linear", "Linear drop off (linear)", "Volume will decrease linearly with distance" ],
            [ "exponential", "Exponential drop off (exponential)", "Volume will decrease expoentially with distance" ]
          ],
          "default": "inverse"
        },
        "avatarRolloffFactor": { "type": "float", "default": 2.0, "description": "Avatar Rolloff Factor" },
        "avatarRefDistance": { "type": "float", "default": 1.0, "unit": "LENGTH", "description": " Avatar Ref Distance" },
        "avatarMaxDistance": { "type": "float", "default": 10000.0, "unit": "LENGTH","description": "Avatar Max Distance" },
        "mediaVolume": { "type": "float", "default": 0.5, "description": "Media Volume" },
        "mediaDistanceModel": {
          "type": "enum",
          "description": "Media Distance Model",
          "items": [ 
            [ "inverse", "Inverse drop off (inverse)", "Volume will decrease inversely with distance" ],
            [ "linear", "Linear drop off (linear)", "Volume will decrease linearly with distance" ],
            [ "exponential", "Exponential drop off (exponential)", "Volume will decrease expoentially with distance" ]
          ],
          "default": "inverse"
        },
        "mediaRolloffFactor": { "type": "float", "default": 2.0, "description": "Media Rolloff Factor" },
        "mediaRefDistance": { "type": "float", "default": 1.0, "unit": "LENGTH","description": " Media Ref Distance" },
        "mediaMaxDistance": { "type": "float", "default": 10000.0, "unit": "LENGTH","description": "Media Max Distance" },
        "mediaConeInnerAngle": { "type": "float", "default": 360.0, "description": "Media Cone Inner Angle" },
        "mediaConeOuterAngle": { "type": "float", "default": 0.0, "description": "Media Cone Outer Angle" },
        "mediaConeOuterGain": { "type": "float", "default": 0.0, "description": "Media Cone Outer Gain" }
      }
    },
    "visible": {
      "category": "Scene",
      "node": true,
      "properties": {
        "visible": { "type": "bool", "default": true }
      }
    },
    "directional-light": {
      "category": "Elements",
      "node": true,
      "properties": {
        "color": {"type": "color"},
        "intensity": {"type": "float", "default": 1.0},
        "castShadow": { "type": "bool", "default": false },
        "shadowMapResolution": {"type": "ivec2", "unit":"PIXEL", "default": [512, 512]},
        "shadowBias": {"type": "float", "default": 0.0},
        "shadowRadius": {"type": "float", "default": 1.0}
      }
    },
    "point-light": {
      "category": "Elements",
      "node": true,
      "properties": {
        "color": {"type": "color"},
        "intensity": {"type": "float", "default": 1.0},
        "range": {"type": "float", "default": 0.0},
        "decay": {"type": "float", "default": 2.0},
        "castShadow": { "type": "bool", "default": false },
        "shadowMapResolution": {"type": "ivec2", "unit":"PIXEL", "default": [512, 512]},
        "shadowBias": {"type": "float", "default": 0.0},
        "shadowRadius": {"type": "float", "default": 1.0}
      }
    },
    "ambient-light": {
      "category": "Elements",
      "node": true,
      "properties": {
        "color": {"type": "color"},
        "intensity": {"type": "float", "default": 1.0}
      }
    },
    "particle-emitter": {
      "node": true,
      "category": "Elements",
      "properties": {
        "src": {"type": "string", "default": ""},
        "startColor": {"type": "color"},
        "middleColor": {"type": "color"},
        "endColor": {"type": "color"},
        "startOpacity": {"type": "float", "default": 1.0},
        "middleOpacity": {"type": "float", "default": 1.0},
        "endOpacity": {"type": "float", "default": 1.0},
        "sizeCurve": {"type": "enum", "items":[
          ["linear" ,"linear", ""],
          ["quadraticIn" ,"quadraticIn", ""], ["quadraticOut" ,"quadraticOut", ""], ["quadraticInOut" ,"quadraticInOut", ""],
          ["cubicIn" ,"cubicIn", ""], ["cubicOut" ,"cubicOut", ""], ["cubicInOut" ,"cubicInOut", ""],
          ["quarticIn" ,"quarticIn", ""], ["quarticOut" ,"quarticOut", ""], ["quarticInOut" ,"quarticInOut", ""],
          ["quinticIn" ,"quinticIn", ""], ["quinticOut" ,"quinticOut", ""], ["quinticInOut" ,"quinticInOut", ""],
          ["sinusoidalIn" ,"sinusoidalIn", ""], ["sinusoidalOut" ,"sinusoidalOut", ""], ["sinusoidalInOut" ,"sinusoidalInOut", ""],
          ["exponentialIn" ,"exponentialIn", ""], ["exponentialOut" ,"exponentialOut", ""], ["exponentialInOut" ,"exponentialIn", ""],
          ["circularIn" ,"circularIn", ""], ["circularOut" ,"circularOut", ""], ["circularInOut" ,"circularInOut", ""],
          ["elasticIn" ,"elasticIn", ""], ["elasticOut" ,"elasticOut", ""], ["elasticInOut" ,"elasticInOut", ""],
          ["backIn" ,"backIn", ""], ["backOut" ,"backOut", ""], ["backInOut" ,"backInOut", ""],
          ["bounceIn" ,"bounceIn", ""], ["bounceOut" ,"bounceOut", ""], ["bounceInOut" ,"bounceInOut", ""]
        ], "default": "linear"},
        "colorCurve": {"type": "enum", "items":[
          ["linear" ,"linear", ""],
          ["quadraticIn" ,"quadraticIn", ""], ["quadraticOut" ,"quadraticOut", ""], ["quadraticInOut" ,"quadraticInOut", ""],
          ["cubicIn" ,"cubicIn", ""], ["cubicOut" ,"cubicOut", ""], ["cubicInOut" ,"cubicInOut", ""],
          ["quarticIn" ,"quarticIn", ""], ["quarticOut" ,"quarticOut", ""], ["quarticInOut" ,"quarticInOut", ""],
          ["quinticIn" ,"quinticIn", ""], ["quinticOut" ,"quinticOut", ""], ["quinticInOut" ,"quinticInOut", ""],
          ["sinusoidalIn" ,"sinusoidalIn", ""], ["sinusoidalOut" ,"sinusoidalOut", ""], ["sinusoidalInOut" ,"sinusoidalInOut", ""],
          ["exponentialIn" ,"exponentialIn", ""], ["exponentialOut" ,"exponentialOut", ""], ["exponentialInOut" ,"exponentialIn", ""],
          ["circularIn" ,"circularIn", ""], ["circularOut" ,"circularOut", ""], ["circularInOut" ,"circularInOut", ""],
          ["elasticIn" ,"elasticIn", ""], ["elasticOut" ,"elasticOut", ""], ["elasticInOut" ,"elasticInOut", ""],
          ["backIn" ,"backIn", ""], ["backOut" ,"backOut", ""], ["backInOut" ,"backInOut", ""],
          ["bounceIn" ,"bounceIn", ""], ["bounceOut" ,"bounceOut", ""], ["bounceInOut" ,"bounceInOut", ""]
        ], "default": "linear"},
        "startSize": {"type": "float", "default": 1.0},
        "endSize": {"type": "float", "default": 1.0},
        "sizeRandomness": {"type": "float"},
        "ageRandomness": {"type": "float"},
        "lifetime": {"type": "float", "default": 1.0, "sybType":"TIME", "unit": "TIME"},
        "lifetimeRandomness": {"type": "float"},
        "particleCount": {"type": "int", "subType": "UNSIGNED", "default": 10},
        "startVelocity": {"type": "vec3", "subType":"XYZ", "unit":"VELOCITY", "default": {"x": 0.0, "y": 0.0, "z": 1.0}},
        "endVelocity": {"type": "vec3", "subType":"XYZ", "unit":"VELOCITY", "default": {"x": 0.0, "y": 0.0, "z": 1.0}},
        "velocityCurve": {"type": "enum", "items":[
          ["linear" ,"linear", ""],
          ["quadraticIn" ,"quadraticIn", ""], ["quadraticOut" ,"quadraticOut", ""], ["quadraticInOut" ,"quadraticInOut", ""],
          ["cubicIn" ,"cubicIn", ""], ["cubicOut" ,"cubicOut", ""], ["cubicInOut" ,"cubicInOut", ""],
          ["quarticIn" ,"quarticIn", ""], ["quarticOut" ,"quarticOut", ""], ["quarticInOut" ,"quarticInOut", ""],
          ["quinticIn" ,"quinticIn", ""], ["quinticOut" ,"quinticOut", ""], ["quinticInOut" ,"quinticInOut", ""],
          ["sinusoidalIn" ,"sinusoidalIn", ""], ["sinusoidalOut" ,"sinusoidalOut", ""], ["sinusoidalInOut" ,"sinusoidalInOut", ""],
          ["exponentialIn" ,"exponentialIn", ""], ["exponentialOut" ,"exponentialOut", ""], ["exponentialInOut" ,"exponentialIn", ""],
          ["circularIn" ,"circularIn", ""], ["circularOut" ,"circularOut", ""], ["circularInOut" ,"circularInOut", ""],
          ["elasticIn" ,"elasticIn", ""], ["elasticOut" ,"elasticOut", ""], ["elasticInOut" ,"elasticInOut", ""],
          ["backIn" ,"backIn", ""], ["backOut" ,"backOut", ""], ["backInOut" ,"backInOut", ""],
          ["bounceIn" ,"bounceIn", ""], ["bounceOut" ,"bounceOut", ""], ["bounceInOut" ,"bounceInOut", ""]
        ], "default": "linear"},
        "angularVelocity": {"type": "float", "unit": "VELOCITY"}
      }
    },
    "waypoint": {
      "category": "Elements",
      "node": true,
      "properties": {
        "canBeSpawnPoint": {"type": "bool", "default": false},
        "canBeOccupied": {"type": "bool", "default": false},
        "canBeClicked": {"type": "bool", "default": false},
        "willDisableMotion": {"type": "bool", "default": false},
        "willDisableTeleporting": {"type": "bool", "default": false},
        "snapToNavMesh": {"type": "bool", "default": false},
        "willMaintainInitialOrientation": {"type": "bool", "default": false},
        "willMaintainWorldUp": {"type": "bool", "default": true},
        "isOccupied": {"type": "bool", "default": false}
      }
    },
    "uv-scroll": {
      "category": "Animation",
      "node": true,
      "properties": {
        "speed": {"type": "vec2", "default": {"x": 0, "y": 0}},
        "increment": {"type": "vec2", "default": {"x": 0, "y": 0}}
      }
    },
    "personal-space-invader": {
      "category": "Avatar",
      "node": true,
      "properties": {
      "radius": { "type": "float", "default": 0.1 },
      "useMaterial": { "type": "bool", "default": false },
      "invadingOpacity": { "type": "float", "default": 0.3 }
      }
    },
    "link": {
      "category": "Elements",
      "node": true,
      "networked": true,
      "properties": {
        "href": {
          "type": "string",
          "description": "URL"
        }
      }
    },
    "image": {
      "category": "Elements",
      "node": true,
      "networked": true,
      "properties": {
        "src": {
          "type": "string",
          "description": "Image URL"
        },
        "controls": {
          "type": "bool", 
          "description": "Controls",
          "default": true
        },
        "alphaMode": {
          "type": "enum",
          "description": "Transparency Mode",
          "items": [ 
            [ "opaque", "No transparency (opaque)", "Alpha channel will be ignored" ],
            [ "blend", "Gradual transparency (blend)", "Alpha channel will be applied" ],
            [ "mask", "Binary transparency (mask)", "Alpha channel will be used as a threshold between opaque and transparent pixels" ]
          ]
        },
        "projection": {
          "type": "enum",
          "description": "Projection",
          "items": [ 
            [ "flat", "2D image (flat)", "Image will be shown on a 2D surface" ],
            [ "360-equirectangular", "Spherical (360-equirectangular)", "Image will be shown on a sphere" ]
          ]
        }
      }
    },
    "audio": {
      "category": "Elements",
      "node": true,
      "networked": true,
      "properties": {
        "src": {
          "type": "string",
          "description": "Audio URL"
        },
        "autoPlay": {
          "type": "bool", 
          "description": "Auto Play",
          "default": true
        },
        "controls": {
          "type": "bool", 
          "description": "Controls",
          "default": true
        },
        "loop": {
          "type": "bool", 
          "description": "Loop",
          "default": true
        },
        "audioType": {
          "type": "enum",
          "description": "Audio Type",
          "items": [ 
            [ "pannernode", "Positional audio (pannernode)", "Volume will change depending on the listener's position relative to the source" ],
            [ "stereo", "Background audio (stereo)", "Volume will be independent of the listener's position" ]
          ]
        },
        "volume": {
          "type": "float", 
          "description": "Volume",
          "default": 0.5
        },
        "distanceModel": {
          "type": "enum",
          "description": "Distance Model",
          "items": [ 
            [ "inverse", "Inverse drop off (inverse)", "Volume will decrease inversely with distance" ],
            [ "linear", "Linear drop off (linear)", "Volume will decrease linearly with distance" ],
            [ "exponential", "Exponential drop off (exponential)", "Volume will decrease expoentially with distance" ]
          ]
        },
        "rolloffFactor": {
          "type": "float", 
          "description": "Rolloff Factor",
          "default": 1.0
        },
        "refDistance": {
          "type": "float", 
          "description": "Ref Distance",
          "unit": "LENGTH",
          "default": 1.0
        },
        "maxDistance": {
          "type": "float", 
          "description": "Max Distance",
          "unit": "LENGTH",
          "default": 10000.0
        },
        "coneInnerAngle": {
          "type": "float", 
          "description": "Cone Inner Angle",
          "default": 360.0
        },
        "coneOuterAngle": {
          "type": "float", 
          "description": "Cone Outer Angle",
          "default": 360.0
        },
        "coneOuterGain": {
          "type": "float", 
          "description": "Cone Outer Gain",
          "default": 0.0
        }
      }
    },
    "video": {
      "category": "Elements",
      "node": true,
      "networked": true,
      "properties": {
        "src": {
          "type": "string",
          "description": "Video URL"
        },
        "projection": {
          "type": "enum",
          "description": "Projection",
          "items": [ 
            [ "flat", "2D image (flat)", "Image will be shown on a 2D surface" ],
            [ "360-equirectangular", "Spherical (360-equirectangular)", "Image will be shown on a sphere" ]
          ]
        },
        "autoPlay": {
          "type": "bool", 
          "description": "Auto Play",
          "default": true
        },
        "controls": {
          "type": "bool", 
          "description": "Controls",
          "default": true
        },
        "loop": {
          "type": "bool", 
          "description": "Loop",
          "default": true
        },
        "audioType": {
          "type": "enum",
          "description": "Audio Type",
          "items": [ 
            [ "pannernode", "Positional audio (pannernode)", "Volume will change depending on the listener's position relative to the source" ],
            [ "stereo", "Background audio (stereo)", "Volume will be independent of the listener's position" ]
          ]
        },
        "volume": {
          "type": "float", 
          "description": "Volume",
          "default": 0.5
        },
        "distanceModel": {
          "type": "enum",
          "description": "Distance Model",
          "items": [ 
            [ "inverse", "Inverse drop off (inverse)", "Volume will decrease inversely with distance" ],
            [ "linear", "Linear drop off (linear)", "Volume will decrease linearly with distance" ],
            [ "exponential", "Exponential drop off (exponential)", "Volume will decrease expoentially with distance" ]
          ]
        },
        "rolloffFactor": {
          "type": "float", 
          "description": "Rolloff Factor",
          "default": 1.0
        },
        "refDistance": {
          "type": "float", 
          "description": "Ref Distance",
          "unit": "LENGTH",
          "default": 1.0
        },
        "maxDistance": {
          "type": "float", 
          "description": "Max Distance",
          "unit": "LENGTH",
          "default": 10000.0
        },
        "coneInnerAngle": {
          "type": "float", 
          "description": "Cone Inner Angle",
          "default": 360.0
        },
        "coneOuterAngle": {
          "type": "float", 
          "description": "Cone Outer Angle",
          "default": 360.0
        },
        "coneOuterGain": {
          "type": "float", 
          "description": "Cone Outer Gain",
          "default": 0.0
        }
      }
    },
    "nav-mesh": {
      "category": "Scene",
      "node": true,
      "properties": {}
    },
    "kit": {
      "category": "Architecture Kit",
      "scene": true,
      "node": false,
      "properties": {
        "authorName": {
          "type": "string"
        },
        "authorUrl": {
          "type": "string"
        },
        "license": {
          "type": "string"
        }
      }
    },
    "kit-piece": {
      "category": "Architecture Kit",
      "properties": {
        "id": {
          "type": "string",
          "default": "$name"
        },
        "name": {
          "type": "string",
          "default": "$name"
        },
        "tags": {
          "type": "collections",
          "collectionPrefix": "KIT_"
        }
      }
    },
    "kit-alt-materials": {
      "category": "Architecture Kit",
      "node": true,
      "properties": {
        "id": {
          "type": "string",
          "default": "$name"
        },
        "name": {
          "type": "string",
          "default": "$name"
        },
        "defaultMaterials": {
          "type": "array",
          "arrayType": "TaggedMaterial"
        },
        "altMaterials": {
          "type": "array",
          "arrayType": "MaterialCollection"
        }
      }
    },
    "material-id": {
      "category": "Architecture Kit",
      "node": false,
      "scene": false,
      "material": true,
      "properties": {
        "id": {
          "type": "string",
          "default": "$name"
        },
        "name": {
          "type": "string",
          "default": "$name"
        }
      }
    },
    "loop-animation": {
      "category": "Animation",
      "node": true,
      "properties": {
        "clip": {
          "type": "string"
        },
        "paused": {
          "type": "bool",
          "default": false
        }
      }
    },
    "scale-audio-feedback": {
      "category": "Avatar",
      "node": true,
      "properties": {
        "minScale": {
          "type": "float",
          "default": 1.0
        },
        "maxScale": {
          "type": "float",
          "default": 1.5
        }
      }
    },
    "morph-audio-feedback": {
      "category": "Avatar",
      "node": true,
      "properties": {
        "name": {
          "type": "string"
        },
        "minValue": {
          "type": "float",
          "default": 0.0
        },
        "maxValue": {
          "type": "float",
          "default": 1.0
        }
      }
    },
    "video-texture-target": {
      "category": "Avatar",
      "node": false,
      "scene": false,
      "material": true,
      "properties": {
        "targetBaseColorMap": {
          "description": "Should the video texture override the base color map?",
          "type": "bool",
          "default": true
        },
        "targetEmissiveMap": {
          "description": "Should the video texture override the emissive map?",
          "type": "bool",
          "default": false
        },
        "srcNode": {
          "label": "Source",
          "description": "Node with a vide-texture-source to pull video from",
          "type": "nodeRef",
          "hasComponents": ["video-texture-source"]
        }
      }
    },
    "billboard": {
      "category": "Elements",
      "node": true,
      "properties": {
        "onlyY": {
          "type": "bool",
          "default": false
        }
      }
    },
    "video-texture-source": {
      "category": "Scene",
      "node": true,
      "properties": {
        "resolution": {"type": "ivec2", "unit":"PIXEL", "default": [1280, 720]},
        "fps": {"type": "int", "default": 15}
      }
    },
    "ammo-shape":{
      "category": "Scene",
      "node": true,
      "properties": {
        "type": {
          "type": "enum",
          "description": "Avatar Distance Model",
          "items": [
            [ "box", "Box Collider", "A box-shaped primitive collision shape"],
            [ "sphere", "Sphere Collider", "A primitive collision shape which is represents a sphere" ],
            [ "hull", "Convex Hull", "A convex hull wrapped around the objects vertecies. A good analogy for a convex hull is an elastic membrane or balloon under pressure which is placed around a given set of vertices. When released the membrane will assume the shape of the convex hull." ],
            [ "mesh", "Mesh Collider", "A shape made of the actual vertecies of the object. This can be expensive for large meshes." ]
          ],
          "default": "hull"
        },
        "fit": {
          "type": "enum",
          "description": "Shape fitting mode",
          "items": [
            [ "all", "Automatic fit all", "Automatically match the shape to fit the object's vertecies"],
            [ "manual", "Manual fit", "Use the manually specified dimensions to define the shape, ignoring the object's vertecies" ]
          ],
          "default": "all"
        },
        "halfExtents": {
          "type": "vec3",
          "description": "Half dimensions of the collider. (Only used when fit is set to \"manual\" and type is set ot \"box\")",
          "unit":"LENGTH",
          "subType":"XYZ_LENGTH",
          "default": [ 0.5,  0.5,  0.5 ]
        },
        "minHalfExtent": {
          "type": "float",
          "description": "The minimum size to use when automatically generating half extents. (Only used when fit is set to \"all\" and type is set ot \"box\")",
          "unit": "LENGTH",
          "default": 0.0
        },
        "maxHalfExtent": {
          "type": "float",
          "description": "The maximum size to use when automatically generating half extents. (Only used when fit is set to \"all\" and type is set ot \"box\")",
          "unit": "LENGTH",
          "default": 1000.0
        },
        "sphereRadius": {
          "type": "float",
          "description": "Radius of the sphere collider. (Only used when fit is set to \"manual\" and type is set ot \"sphere\")",
          "unit": "LENGTH",
          "default": 0.5
        },
        "offset": {
          "type": "vec3",
          "description": "An offset to apply to the collider relative to the object's origin.",
          "subType":"XYZ",
          "default": [ 0.0, 0.0,  0.0 ]
        },
        "includeInvisible": {
          "type": "bool",
          "description": "Include invisible objects when generating a collider. (Only used if \"fit\" is set to \"all\")",
          "default": false
        }
      }
    },
    "media-frame": {
      "category": "Elements",
      "node": true,
      "networked": true,
      "properties": {
        "bounds": {
          "type": "vec3",
          "description": "Bounding box to fit objects into when they are snapped into the media frame.",
          "unit":"LENGTH",
          "subType":"XYZ_LENGTH",
          "default": [ 1.0,  1.0,  1.0 ]
        },
        "mediaType": {
          "type": "enum",
          "description": "Limit what type of media this frame will capture",
          "items": [
            [ "all", "All Media", "Allow any type of media."],
            [ "all-2d", "Only 2D Media", "Allow only Images, Videos, and PDFs." ],
            [ "model", "Only 3D Models", "Allow only 3D models." ],
            [ "image", "Only Images", "Allow only images." ],
            [ "video", "Only Videos", "Allow only videos." ],
            [ "pdf", "Only PDFs", "Allow only PDFs." ]
          ],
          "default": "all-2d"
        },
        "snapToCenter": {
          "type": "bool",
          "description": "Snap the media to the center of the media frame when capturing. If set to false the object will just remain in the place it was dorpped but still be considered \"captured\" by the media frame.",
          "default": true
        }
      }
    },
    "skybox": {
      "category": "Scene",
      "node": true,
      "properties": {
        "azimuth": {
          "type": "float",
          "label": "Time of Day",
          "default": 0.15
        },
        "inclination": {
          "type": "float",
          "label": "Latitude",
          "default": 0.0
        },
        "luminance": {
          "type": "float",
          "label": "Luminance",
          "default": 1.0
        },
        "mieCoefficient": {
          "type": "float",
          "label": "Scattering Amount",
          "default": 0.005
        },
        "mieDirectionalG": {
          "type": "float",
          "label": "Scattering Distance",
          "default": 0.8
        },
        "turbidity": {
          "type": "float",
          "label": "Horizon Start",
          "default": 10.0
        },
        "rayleigh": {
          "type": "float",
          "label": "Horizon Start",
          "default": 2.0
        },
        "distance": {
          "type": "float",
          "label": "Distance",
          "default": 8000.0
        }
      }
    },
    "spawner": {
      "category": "Elements",
      "node": true,
      "properties": {
        "src": { "type": "string" },
        "mediaOptions": { "type": "SpawnerMediaOptions" }
      }
    },
    "audio-target": {
      "category": "Elements",
      "node": true,
      "properties": {
        "srcNode": {
          "label": "Source",
          "description": "Node with a audio-source-zone to pull audio from",
          "type": "nodeRef",
          "hasComponents": ["zone-audio-source"]
        },

        "gain": {
          "type": "float",
          "description": "How much to amplify the source audio by",
          "default": 1.5
        },
        "minDelay": {
          "type": "float",
          "description": "Minumum random delay applied to the source audio",
          "default": 0.01
        },
        "maxDelay": {
          "type": "float",
          "description": "Maxumum random delay applied to the source audio",
          "default": 0.03
        },

        "positional": {
          "description": "Should audio be spatialized. Note the remaining audio properties only apply to positional audio sources.",
          "type": "bool",
          "default": true
        },
        "distanceModel": {
          "type": "enum",
          "description": "Distance Model",
          "items": [
            [ "inverse", "Inverse", "Volume will decrease inversely with distance" ],
            [ "linear", "Linear", "Volume will decrease linearly with distance" ],
            [ "exponential", "Exponential", "Volume will decrease expoentially with distance" ]
          ],
          "default": "inverse"
        },
        "refDistance": {
          "type": "float",
          "subType":"DISTANCE",
          "description": "A double value representing the reference distance for reducing volume as the audio source moves further from the listener. For distances greater than this the volume will be reduced based on rolloffFactor and distanceModel.",
          "unit": "LENGTH",
          "default": 1.0
        },
        "rolloffFactor": {
          "type": "float",
          "description": "A double value describing how quickly the volume is reduced as the source moves away from the listener. This value is used by all distance models.",
          "default": 1.0
        },
        "maxDistance": {
          "type": "float",
          "subType":"DISTANCE",
          "description": "A double value representing the maximum distance between the audio source and the listener, after which the volume is not reduced any further. This value is used only by the linear distance model.",
          "unit": "LENGTH",
          "default": 10000.0
        },
        "coneInnerAngle": {
          "type": "float",
          "description": "A double value describing the angle, in degrees, of a cone inside of which there will be no volume reduction.",
          "default": 360.0
        },
        "coneOuterAngle": {
          "type": "float",
          "description": "A double value describing the angle, in degrees, of a cone outside of which the volume will be reduced by a constant value, defined by the coneOuterGain attribute.",
          "default": 0.0
        },
        "coneOuterGain": {
          "type": "float",
          "description": "A double value describing the amount of volume reduction outside the cone defined by the coneOuterAngle attribute.",
          "default": 0.0
        },
        "debug": {
          "description": "Show debug visuals.",
          "type": "bool",
          "default": false
        }
      }
    },
    "zone-audio-source": {
      "category": "Elements",
      "node": true,
      "properties": {
        "onlyMods": {
          "description": "Only room moderators should be able to transmit audio from this source.",
          "type": "bool",
          "default": true
        },
        "muteSelf": {
          "description": "Do not transmit your own audio to audio targets.",
          "type": "bool",
          "default": true
        },
        "debug": {
          "description": "Play white noise when no audio source is in the zone.",
          "type": "bool",
          "default": false
        }
      }
    },
    "model": {
      "category": "Elements",
      "node": true,
      "networked": true,
      "properties": {
        "src": {
          "type": "string",
          "description": "Model URL"
        }
      }
    }
  }
}
